{
    "width": 590,
    "height": 400,
    "margins": {
        "x": 14,
        "y": 18,
        "width": 6,
        "height": 10
    },
    "axes": [
        {
            "position": "x",
            "categoryFields": ["Owner"],
            "hidden": true
        },
        {
            "position": "y",
            "measure": "Unit Sales",
            "hidden": true
        }
    ],
    "series": [
        {
            "categoryFields": ["Owner"],
            "plot": "bar",
            "eventHandlers": [
                {
                    "event": "mouseover",
                    "handler": "            // Draw the text information in the top left corner\n            chart.svg.selectAll(\".dimple-hover-text\")\n            .data([e.xValue, d3.format(\",.f\")(e.yValue)])\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"dimple-hover-text\")\n            .attr(\"x\", chart._xPixels()  + chart._widthPixels() - 25)\n            .attr(\"y\", function (d, i) { return chart._yPixels() + 20 + i * 25; })\n            .style(\"font-family\", \"courier new\")\n            .style(\"text-anchor\", \"end\")\n            .style(\"font-size\", \"20px\")\n            .style(\"fill\", \"#ecf0f1\")\n            .style(\"pointer-events\", \"none\")\n            .text(function (d) { return d; });\n\n            // Put a coloured bar next to the text for no good reason\n            chart.svg.append(\"rect\")\n            .attr(\"class\", \"dimple-hover-text\")\n            .attr(\"x\", chart._xPixels() + chart._widthPixels() - 15)\n            .attr(\"y\", chart._yPixels())\n            .attr(\"height\", 60)\n            .attr(\"width\", 10)\n            .style(\"fill\", chart.getColor(e.xValue).fill)\n            .style(\"opacity\", 1)\n            .style(\"pointer-events\", \"none\");"
                },
                {
                    "event": "mouseleave",
                    "handler": "                chart.svg.selectAll(\".dimple-hover-text\").remove();\n"
                }
            ],
            "afterDraw": "     chart.svg.style(\"background-color\", \"#2C3E50\").background=\"black\";   // I've defined the width in terms of the golden ratio as it seems like the sort\n        // of thing a designer would do.\n        var sh = d3.select(shape),\n        goldenRatio = 1.61803398875;\n\n        // Add a rectangle to the bar giving a nice style.  The idea was borrowed\n        // from sirocco's question here:\n        // http://stackoverflow.com/questions/25044608/dimplejs-barchart-styling-columns\n        chart.svg.append(\"rect\")\n        .attr(\"x\", sh.attr(\"x\"))\n        .attr(\"y\", sh.attr(\"y\"))\n        .attr(\"height\", sh.attr(\"height\"))\n        .attr(\"width\", (0.5 * sh.attr(\"width\")) / goldenRatio)\n        .style(\"fill\", sh.style(\"stroke\"))\n        .style(\"opacity\", 1)\n        .style(\"pointer-events\", \"none\");\n\n        // Add some bar labels for the yValue\n        chart.svg.append(\"text\")\n        .attr(\"x\", parseFloat(sh.attr(\"x\")) + sh.attr(\"width\") / 2)\n        .attr(\"y\", parseFloat(sh.attr(\"y\")) + (sh.attr(\"height\") > 30 ? (sh.attr(\"height\") / 2 + 8) : - 10))\n        .style(\"font-family\", \"courier new\")\n        .style(\"text-anchor\", \"middle\")\n        .style(\"font-size\", \"16px\")\n        .style(\"fill\", \"#ecf0f1\")\n        .style(\"pointer-events\", \"none\")\n        .text(chart.axes[1]._getFormat()(shapeData.yValue));\n\n        // Draw without a border\n        sh.attr(\"stroke\", sh.attr(\"fill\"));\n"
        }
    ],
    "defaultColors": [
        {
            "fill": "#3498db",
            "stroke": "#2980b9",
            "opacity": 1
        },
        {
            "fill": "#e74c3c",
            "stroke": "#c0392b",
            "opacity": 1
        },
        {
            "fill": "#2ecc71",
            "stroke": "#27ae60",
            "opacity": 1
        },
        {
            "fill": "#9b59b6",
            "stroke": "#8e44ad",
            "opacity": 1
        },
        {
            "fill": "#e67e22",
            "stroke": "#d35400",
            "opacity": 1
        },
        {
            "fill": "#f1c40f",
            "stroke": "#f39c12",
            "opacity": 1
        },
        {
            "fill": "#1abc9c",
            "stroke": "#16a085",
            "opacity": 1
        },
        {
            "fill": "#95a5a6",
            "stroke": "#7f8c8d",
            "opacity": 1
        }
    ]
}
